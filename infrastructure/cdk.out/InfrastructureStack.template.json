{
 "Resources": {
  "WebsiteBucket75C24D94": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:eef8bb98",
      "Value": "true"
     },
     {
      "Key": "ForceUpdate",
      "Value": "2025-04-24T02:35:14.344Z"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/WebsiteBucket/Resource"
   }
  },
  "WebsiteBucketPolicyE10E3262": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "WebsiteBucket75C24D94"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebsiteBucket75C24D94",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucket75C24D94",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OAIE1EFC67F",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebsiteBucket75C24D94",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucket75C24D94",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OAIE1EFC67F",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "WebsiteBucket75C24D94",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/WebsiteBucket/Policy/Resource"
   }
  },
  "WebsiteBucketAutoDeleteObjectsCustomResource8750E461": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "WebsiteBucket75C24D94"
    }
   },
   "DependsOn": [
    "WebsiteBucketPolicyE10E3262"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/WebsiteBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-323399919537-us-east-2",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "WebsiteBucket75C24D94"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "OAIE1EFC67F": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/OAI/Resource"
   }
  },
  "Distribution830FAC52": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CustomErrorResponses": [
      {
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "TargetOriginId": "InfrastructureStackDistributionOrigin18128C7B5",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "WebsiteBucket75C24D94",
         "RegionalDomainName"
        ]
       },
       "Id": "InfrastructureStackDistributionOrigin18128C7B5",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "OAIE1EFC67F"
           }
          ]
         ]
        }
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Distribution/Resource"
   }
  },
  "DeployWebsiteAwsCliLayer17DBC421": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-323399919537-us-east-2",
     "S3Key": "8341cb239e4e1842be4d85a62c1b0a519b37f6f3b0e6acc9758db8a98f518fa3.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/DeployWebsite/AwsCliLayer/Resource",
    "aws:asset:path": "asset.8341cb239e4e1842be4d85a62c1b0a519b37f6f3b0e6acc9758db8a98f518fa3.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "DeployWebsiteCustomResourceD116527B": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-323399919537-us-east-2"
    ],
    "SourceObjectKeys": [
     "4000d30c24342b272754cd0932a84b840e689824a30c5f94a01c9c0ff62fbaf8.zip"
    ],
    "DestinationBucketName": {
     "Ref": "WebsiteBucket75C24D94"
    },
    "Prune": true,
    "DistributionId": {
     "Ref": "Distribution830FAC52"
    },
    "DistributionPaths": [
     "/*"
    ],
    "OutputObjectKeys": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/DeployWebsite/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::cdk-hnb659fds-assets-323399919537-us-east-2",
        "arn:aws:s3:::cdk-hnb659fds-assets-323399919537-us-east-2/*"
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebsiteBucket75C24D94",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucket75C24D94",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-323399919537-us-east-2",
     "S3Key": "9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeployWebsiteAwsCliLayer17DBC421"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": true,
      "RequireUppercase": true
     }
    },
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/UserPool/Resource"
   }
  },
  "UserPoolClient2F5918F7": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     {
      "Fn::Join": [
       "",
       [
        "https://",
        {
         "Fn::GetAtt": [
          "Distribution830FAC52",
          "DomainName"
         ]
        }
       ]
      ]
     },
     "http://localhost:3000"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "LogoutURLs": [
     {
      "Fn::Join": [
       "",
       [
        "https://",
        {
         "Fn::GetAtt": [
          "Distribution830FAC52",
          "DomainName"
         ]
        }
       ]
      ]
     },
     "http://localhost:3000"
    ],
    "PreventUserExistenceErrors": "ENABLED",
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/UserPoolClient/Resource"
   }
  },
  "UsersTable9725E9C8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/UsersTable/Resource"
   }
  },
  "RateLimitTableFAD921A1": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "key",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "key",
      "KeyType": "HASH"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/RateLimitTable/Resource"
   }
  },
  "TokensTable6C9B5BC6": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "tokenAddress",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "tokenAddress",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/TokensTable/Resource"
   }
  },
  "PositionsTable41EA5B9F": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "tokenAddress",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "tokenAddress",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PositionsTable/Resource"
   }
  },
  "TradeHandlerServiceRole97F432E3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/TradeHandler/ServiceRole/Resource"
   }
  },
  "TradeHandler3A144BA8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-323399919537-us-east-2",
     "S3Key": "10920d6705684fc9cb118e15beb7e68a6fbb0b67aef9a5b516d113d6a3472b49.zip"
    },
    "Environment": {
     "Variables": {
      "SOLANA_RPC_ENDPOINT": "https://api.mainnet-beta.solana.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "TradeHandlerServiceRole97F432E3",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 30
   },
   "DependsOn": [
    "TradeHandlerServiceRole97F432E3"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/TradeHandler/Resource",
    "aws:asset:path": "asset.10920d6705684fc9cb118e15beb7e68a6fbb0b67aef9a5b516d113d6a3472b49",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "PositionsHandlerServiceRole7E35ECD8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PositionsHandler/ServiceRole/Resource"
   }
  },
  "PositionsHandler9478FDD4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-323399919537-us-east-2",
     "S3Key": "b9d2ddd2c518dad754ea4865242f08664118def53c855afba6c547026fcfb576.zip"
    },
    "Environment": {
     "Variables": {
      "SOLANA_RPC_ENDPOINT": "https://api.mainnet-beta.solana.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "PositionsHandlerServiceRole7E35ECD8",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "PositionsHandlerServiceRole7E35ECD8"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PositionsHandler/Resource",
    "aws:asset:path": "asset.b9d2ddd2c518dad754ea4865242f08664118def53c855afba6c547026fcfb576",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "WalletHandlerServiceRole2C7101D5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/WalletHandler/ServiceRole/Resource"
   }
  },
  "WalletHandlerB18A2803": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-323399919537-us-east-2",
     "S3Key": "57a75cf94f8b0b3bb19faebf275250f1f8321d057a78fb46a7a1dfd6f98ee2c0.zip"
    },
    "Environment": {
     "Variables": {
      "SOLANA_RPC_ENDPOINT": "https://api.mainnet-beta.solana.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "WalletHandlerServiceRole2C7101D5",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "WalletHandlerServiceRole2C7101D5"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/WalletHandler/Resource",
    "aws:asset:path": "asset.57a75cf94f8b0b3bb19faebf275250f1f8321d057a78fb46a7a1dfd6f98ee2c0",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "LogsHandlerServiceRole6801850E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/LogsHandler/ServiceRole/Resource"
   }
  },
  "LogsHandler9FD53545": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-323399919537-us-east-2",
     "S3Key": "0990d4b3764fac56aead74cf2ddbcb72c661ba59cc89b6de4b142525d7d478d2.zip"
    },
    "Environment": {
     "Variables": {
      "SOLANA_RPC_ENDPOINT": "https://api.mainnet-beta.solana.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "LogsHandlerServiceRole6801850E",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "LogsHandlerServiceRole6801850E"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/LogsHandler/Resource",
    "aws:asset:path": "asset.0990d4b3764fac56aead74cf2ddbcb72c661ba59cc89b6de4b142525d7d478d2",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ConfigWalletHandlerServiceRoleF0345578": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/ConfigWalletHandler/ServiceRole/Resource"
   }
  },
  "ConfigWalletHandler66877661": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-323399919537-us-east-2",
     "S3Key": "e4f1bbb8264156381a2e740d6dbb715b9c51836c32eef474ccd25014b65c0ceb.zip"
    },
    "Environment": {
     "Variables": {
      "SOLANA_RPC_ENDPOINT": "https://api.mainnet-beta.solana.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ConfigWalletHandlerServiceRoleF0345578",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "ConfigWalletHandlerServiceRoleF0345578"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/ConfigWalletHandler/Resource",
    "aws:asset:path": "asset.e4f1bbb8264156381a2e740d6dbb715b9c51836c32eef474ccd25014b65c0ceb",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ApiF70053CD": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Api"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Resource"
   }
  },
  "ApiDeploymentB17BE62Decaa910c9d30434d6eb6cb53bff7325b": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "DependsOn": [
    "ApiconfigOPTIONS2CF14FA0",
    "Apiconfig62453FB1",
    "ApiconfigwalletOPTIONS8F2A3348",
    "ApiconfigwalletPOSTFA5DFC18",
    "Apiconfigwallet58E0CADD",
    "ApilogsGET0440CA2D",
    "ApilogsOPTIONSF44380FC",
    "Apilogs3592D9D4",
    "ApiOPTIONS5886EA5D",
    "ApipositionsGETA1BF6530",
    "ApipositionsOPTIONS3BBC1E5D",
    "Apipositions9F406D13",
    "ApitradeOPTIONS7E0C55FE",
    "ApitradePOST4AA7EE20",
    "ApitradeAA9FE096",
    "ApiwalletGETBAC96AF6",
    "ApiwalletOPTIONSCC434475",
    "ApiwalletAE954E48",
    "ApiAuthorizer68095F41"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Deployment/Resource"
   }
  },
  "ApiDeploymentStageprod3EB9684E": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ApiDeploymentB17BE62Decaa910c9d30434d6eb6cb53bff7325b"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/DeploymentStage.prod/Resource"
   }
  },
  "ApiOPTIONS5886EA5D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": {
         "Fn::Join": [
          "",
          [
           "'https://",
           {
            "Fn::GetAtt": [
             "Distribution830FAC52",
             "DomainName"
            ]
           },
           "'"
          ]
         ]
        },
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/OPTIONS/Resource"
   }
  },
  "ApitradeAA9FE096": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "RootResourceId"
     ]
    },
    "PathPart": "trade",
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/trade/Resource"
   }
  },
  "ApitradeOPTIONS7E0C55FE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": {
         "Fn::Join": [
          "",
          [
           "'https://",
           {
            "Fn::GetAtt": [
             "Distribution830FAC52",
             "DomainName"
            ]
           },
           "'"
          ]
         ]
        },
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApitradeAA9FE096"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/trade/OPTIONS/Resource"
   }
  },
  "ApitradePOSTApiPermissionInfrastructureStackApiD473DFBAPOSTtrade8AE1C99E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TradeHandler3A144BA8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/",
       {
        "Ref": "ApiDeploymentStageprod3EB9684E"
       },
       "/POST/trade"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/trade/POST/ApiPermission.InfrastructureStackApiD473DFBA.POST..trade"
   }
  },
  "ApitradePOSTApiPermissionTestInfrastructureStackApiD473DFBAPOSTtradeDF6FABCA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TradeHandler3A144BA8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/test-invoke-stage/POST/trade"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/trade/POST/ApiPermission.Test.InfrastructureStackApiD473DFBA.POST..trade"
   }
  },
  "ApitradePOST4AA7EE20": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "ApiAuthorizer68095F41"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TradeHandler3A144BA8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApitradeAA9FE096"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/trade/POST/Resource"
   }
  },
  "Apipositions9F406D13": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "RootResourceId"
     ]
    },
    "PathPart": "positions",
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/positions/Resource"
   }
  },
  "ApipositionsOPTIONS3BBC1E5D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": {
         "Fn::Join": [
          "",
          [
           "'https://",
           {
            "Fn::GetAtt": [
             "Distribution830FAC52",
             "DomainName"
            ]
           },
           "'"
          ]
         ]
        },
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "Apipositions9F406D13"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/positions/OPTIONS/Resource"
   }
  },
  "ApipositionsGETApiPermissionInfrastructureStackApiD473DFBAGETpositions769E2C39": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PositionsHandler9478FDD4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/",
       {
        "Ref": "ApiDeploymentStageprod3EB9684E"
       },
       "/GET/positions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/positions/GET/ApiPermission.InfrastructureStackApiD473DFBA.GET..positions"
   }
  },
  "ApipositionsGETApiPermissionTestInfrastructureStackApiD473DFBAGETpositionsC811B945": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PositionsHandler9478FDD4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/test-invoke-stage/GET/positions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/positions/GET/ApiPermission.Test.InfrastructureStackApiD473DFBA.GET..positions"
   }
  },
  "ApipositionsGETA1BF6530": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "ApiAuthorizer68095F41"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PositionsHandler9478FDD4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "Apipositions9F406D13"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/positions/GET/Resource"
   }
  },
  "ApiwalletAE954E48": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "RootResourceId"
     ]
    },
    "PathPart": "wallet",
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/wallet/Resource"
   }
  },
  "ApiwalletOPTIONSCC434475": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": {
         "Fn::Join": [
          "",
          [
           "'https://",
           {
            "Fn::GetAtt": [
             "Distribution830FAC52",
             "DomainName"
            ]
           },
           "'"
          ]
         ]
        },
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiwalletAE954E48"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/wallet/OPTIONS/Resource"
   }
  },
  "ApiwalletGETApiPermissionInfrastructureStackApiD473DFBAGETwalletC2CF69E9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WalletHandlerB18A2803",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/",
       {
        "Ref": "ApiDeploymentStageprod3EB9684E"
       },
       "/GET/wallet"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/wallet/GET/ApiPermission.InfrastructureStackApiD473DFBA.GET..wallet"
   }
  },
  "ApiwalletGETApiPermissionTestInfrastructureStackApiD473DFBAGETwallet4F6B0325": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WalletHandlerB18A2803",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/test-invoke-stage/GET/wallet"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/wallet/GET/ApiPermission.Test.InfrastructureStackApiD473DFBA.GET..wallet"
   }
  },
  "ApiwalletGETBAC96AF6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "ApiAuthorizer68095F41"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "WalletHandlerB18A2803",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiwalletAE954E48"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/wallet/GET/Resource"
   }
  },
  "Apilogs3592D9D4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "RootResourceId"
     ]
    },
    "PathPart": "logs",
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/logs/Resource"
   }
  },
  "ApilogsOPTIONSF44380FC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": {
         "Fn::Join": [
          "",
          [
           "'https://",
           {
            "Fn::GetAtt": [
             "Distribution830FAC52",
             "DomainName"
            ]
           },
           "'"
          ]
         ]
        },
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "Apilogs3592D9D4"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/logs/OPTIONS/Resource"
   }
  },
  "ApilogsGETApiPermissionInfrastructureStackApiD473DFBAGETlogs6C721593": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LogsHandler9FD53545",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/",
       {
        "Ref": "ApiDeploymentStageprod3EB9684E"
       },
       "/GET/logs"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/logs/GET/ApiPermission.InfrastructureStackApiD473DFBA.GET..logs"
   }
  },
  "ApilogsGETApiPermissionTestInfrastructureStackApiD473DFBAGETlogs8AE73C3D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LogsHandler9FD53545",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/test-invoke-stage/GET/logs"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/logs/GET/ApiPermission.Test.InfrastructureStackApiD473DFBA.GET..logs"
   }
  },
  "ApilogsGET0440CA2D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "ApiAuthorizer68095F41"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LogsHandler9FD53545",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "Apilogs3592D9D4"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/logs/GET/Resource"
   }
  },
  "Apiconfig62453FB1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "RootResourceId"
     ]
    },
    "PathPart": "config",
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/config/Resource"
   }
  },
  "ApiconfigOPTIONS2CF14FA0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": {
         "Fn::Join": [
          "",
          [
           "'https://",
           {
            "Fn::GetAtt": [
             "Distribution830FAC52",
             "DomainName"
            ]
           },
           "'"
          ]
         ]
        },
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "Apiconfig62453FB1"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/config/OPTIONS/Resource"
   }
  },
  "Apiconfigwallet58E0CADD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "Apiconfig62453FB1"
    },
    "PathPart": "wallet",
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/config/wallet/Resource"
   }
  },
  "ApiconfigwalletOPTIONS8F2A3348": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": {
         "Fn::Join": [
          "",
          [
           "'https://",
           {
            "Fn::GetAtt": [
             "Distribution830FAC52",
             "DomainName"
            ]
           },
           "'"
          ]
         ]
        },
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "Apiconfigwallet58E0CADD"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/config/wallet/OPTIONS/Resource"
   }
  },
  "ApiconfigwalletPOSTApiPermissionInfrastructureStackApiD473DFBAPOSTconfigwalletC25211BD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ConfigWalletHandler66877661",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/",
       {
        "Ref": "ApiDeploymentStageprod3EB9684E"
       },
       "/POST/config/wallet"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/config/wallet/POST/ApiPermission.InfrastructureStackApiD473DFBA.POST..config.wallet"
   }
  },
  "ApiconfigwalletPOSTApiPermissionTestInfrastructureStackApiD473DFBAPOSTconfigwallet886353A2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ConfigWalletHandler66877661",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:323399919537:",
       {
        "Ref": "ApiF70053CD"
       },
       "/test-invoke-stage/POST/config/wallet"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/config/wallet/POST/ApiPermission.Test.InfrastructureStackApiD473DFBA.POST..config.wallet"
   }
  },
  "ApiconfigwalletPOSTFA5DFC18": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "ApiAuthorizer68095F41"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ConfigWalletHandler66877661",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "Apiconfigwallet58E0CADD"
    },
    "RestApiId": {
     "Ref": "ApiF70053CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Api/Default/config/wallet/POST/Resource"
   }
  },
  "ApiAuthorizer68095F41": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "InfrastructureStackApiAuthorizer1D1B8B6F",
    "ProviderARNs": [
     {
      "Fn::GetAtt": [
       "UserPool6BA7E5F2",
       "Arn"
      ]
     }
    ],
    "RestApiId": {
     "Ref": "ApiF70053CD"
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/ApiAuthorizer/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21RwW7bMAz9lt4VLW2BATu6LgoM2NYg2XYNZIlxmchSIFI1PMH/Pki2kxToiY98T+QT+SDvv63l+k71tNLmtLLYyLRjpU9C9bRP9CjTU9QnYFEf3IymsPEW9XAtz/mUPCmCUWjrozkE71im14AtukprIPpuwDFyeVxnzUvWfKp4RuKATWT0Lstv81HQ4z4ZOFs/dOBYTrOfLwWhiIBJVjmMwqquMUqm+uB+qAHCXwiU2+7QtRbYu5fodBl0AfXB3eINhA6JymxUnUxbbyETJV43MqFRaN86ZC/TH4Kw8d5m8oIXUFvMZm+oqTIKMzjVedPI9Fs106QClr/snTdwJPmrhItTdcZWMfRqkGkLxNUZi8kZ3iwob/Sa7Vi1ZcgEtkA+Bg35mOIn8Js3mZzRws6dZzx9ePkHVZHffMB/ELLsmo2jqCOx7z7v8oHaBP+OBkKxUU6Z7aFrlyXYfMy96klblFVPtcVy3w8WXyOfI48ib0we6cv7w1ref5XruyMhrkJ0jB3I7RT/AwLNXnoXAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ApiEndpoint4F160690": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiF70053CD"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ApiDeploymentStageprod3EB9684E"
      },
      "/"
     ]
    ]
   }
  },
  "CloudFrontDomain": {
   "Value": {
    "Fn::GetAtt": [
     "Distribution830FAC52",
     "DomainName"
    ]
   }
  },
  "UserPoolId": {
   "Value": {
    "Ref": "UserPool6BA7E5F2"
   }
  },
  "UserPoolClientId": {
   "Value": {
    "Ref": "UserPoolClient2F5918F7"
   }
  },
  "ApiEndpoint": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiF70053CD"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ApiDeploymentStageprod3EB9684E"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}